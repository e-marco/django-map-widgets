class DjangoMapWidgetBase{constructor(e){Object.assign(this,e),this.coordinatesOverlayToggleBtn.addEventListener("click",this.toggleCoordinatesOverlay.bind(this)),this.coordinatesOverlayDoneBtn.addEventListener("click",this.handleCoordinatesOverlayDoneBtnClick.bind(this)),this.coordinatesOverlayInputs.forEach((e=>e.addEventListener("change",this.handleCoordinatesInputsChange.bind(this)))),this.addMarkerBtn.addEventListener("click",this.handleAddMarkerBtnClick.bind(this)),this.deleteBtn.addEventListener("click",this.resetMap.bind(this)),this.wrapElemSelector.closest(".module.collapse")&&document.addEventListener("show.fieldset",this.initializeMap.bind(this));const t=new google.maps.places.Autocomplete(this.addressAutoCompleteInput,this.GooglePlaceAutocompleteOptions);google.maps.event.addListener(t,"place_changed",this.handleAutoCompletePlaceChange.bind(this,t)),this.addressAutoCompleteInput.addEventListener("keydown",this.handleAutoCompleteInputKeyDown.bind(this)),this.geocoder=new google.maps.Geocoder,this.initializeMap()}initializeMap(){console.warn("Implement initializeMap method.")}updateMap(e,t){console.warn("Implement updateMap method.")}addMarkerToMap(e,t){console.warn("Implement this method for your map js library.")}fitBoundMarker(){console.warn("Implement this method for your map js library.")}removeMarker(){console.warn("Implement this method for your map js library.")}dragMarker(e){console.warn("Implement dragMarker method.")}handleMapClick(e){console.warn("Implement handleMapClick method.")}handleAddMarkerBtnClick(e){console.warn("Implement handleAddMarkerBtnClick method.")}isInt(e){return!isNaN(e)&&parseInt(Number(e))===e&&!isNaN(parseInt(e,10))}getLocationValues(){const e=this.locationInput.value.split(" ");return{lat:e[2].replace(/[\(\)]/g,""),lng:e[1].replace(/[\(\)]/g,"")}}callPlaceTriggerHandler(e,t,a){if(void 0===a){const a={lat:parseFloat(e),lng:parseFloat(t)};this.geocoder.geocode({location:a},((a,o)=>{if(o===google.maps.GeocoderStatus.OK){const o=a[0]||{};this.addressAutoCompleteInput.value=o.formatted_address||"",document.dispatchEvent(new CustomEvent(this.placeChangedTriggerNameSpace,{detail:[o,e,t,this.wrapElemSelector,this.locationInput]})),this.locationFieldValue&&0!==Object.keys(this.locationFieldValue).length?document.dispatchEvent(new CustomEvent(this.markerChangeTriggerNameSpace,{detail:[o,e,t,this.wrapElemSelector,this.locationInput]})):document.dispatchEvent(new CustomEvent(this.markerCreateTriggerNameSpace,{detail:[o,e,t,this.wrapElemSelector,this.locationInput]}))}}))}else document.dispatchEvent(new CustomEvent(this.placeChangedTriggerNameSpace,{detail:[a,e,t,this.wrapElemSelector,this.locationInput]}))}updateLocationInput(e,t,a){const o="POINT ("+t+" "+e+")";this.locationInput.value=o,this.updateCoordinatesInputs(e,t),this.addMarkerToMap(e,t),this.callPlaceTriggerHandler(e,t,a),this.locationFieldValue={lng:t,lat:e},this.deleteBtn.classList.remove("mw-btn-default","disabled"),this.deleteBtn.classList.add("mw-btn-danger")}resetMap(){this.locationFieldValue&&Object.keys(this.locationFieldValue).length>0&&(this.hideOverlay(),this.locationInput.value="",this.coordinatesOverlayInputs.value="",this.addressAutoCompleteInput.value="",this.addMarkerBtn.classList.remove("active"),this.removeMarker(),this.deleteBtn.classList.remove("mw-btn-danger"),this.deleteBtn.classList.add("mw-btn-default","disabled"),document.dispatchEvent(new CustomEvent(this.markerDeleteTriggerNameSpace,{detail:[this.locationFieldValue.lat,this.locationFieldValue.lng,this.wrapElemSelector,this.locationInput]})),this.locationFieldValue=null)}toggleCoordinatesOverlay(){this.coordinatesOverlayToggleBtn.classList.toggle("active"),this.wrapElemSelector.querySelector(".mw-coordinates-overlay").classList.toggle("hide")}updateCoordinatesInputs(e,t){this.wrapElemSelector.querySelector(".mw-overlay-latitude").value=Number(e).toFixed(5)||"",this.wrapElemSelector.querySelector(".mw-overlay-longitude").value=Number(t).toFixed(5)||""}handleCoordinatesInputsChange(e){const t=this.wrapElemSelector.querySelector(".mw-overlay-latitude").value,a=this.wrapElemSelector.querySelector(".mw-overlay-longitude").value;t&&a&&(this.updateLocationInput(t,a),this.fitBoundMarker())}handleCoordinatesOverlayDoneBtnClick(){this.wrapElemSelector.querySelector(".mw-coordinates-overlay").classList.add("hide"),this.coordinatesOverlayToggleBtn.classList.remove("active")}handleCurrentPosition(e){this.updateLocationInput(e.coords.latitude,e.coords.longitude),this.hideOverlay(),this.fitBoundMarker()}handlecurrentPositionError(){this.hideOverlay(),alert("Your location could not be found.")}handleAutoCompleteInputKeyDown(e){if(13===(e.keyCode||e.which))return e.preventDefault(),!1}handleAutoCompletePlaceChange(e){const t=e.getPlace();if(!t.geometry)return;const a=t.geometry.location.lat(),o=t.geometry.location.lng();this.updateLocationInput(a,o,t),this.fitBoundMarker()}showOverlay(){this.loaderOverlayElem.classList.remove("hide")}hideOverlay(){this.loaderOverlayElem.classList.add("hide")}}class DjangoGooglePointFieldWidget extends DjangoMapWidgetBase{initializeMap(){let e=this.mapCenterLocation;this.mapCenterLocationName?this.geocoder.geocode({address:this.mapCenterLocationName},((t,a)=>{if(a===google.maps.GeocoderStatus.OK){var o=t[0].geometry.location;e=[o.lat(),o.lng()]}this.map=new google.maps.Map(this.mapElement,{center:new google.maps.LatLng(e[0],e[1]),scrollwheel:this.scrollWheel,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT},zoom:this.zoom,streetViewControl:this.streetViewControl}),this.locationFieldValue&&Object.keys(this.locationFieldValue).length>0&&(this.updateLocationInput(this.locationFieldValue.lat,this.locationFieldValue.lng),this.fitBoundMarker())})):(this.map=new google.maps.Map(this.mapElement,{center:new google.maps.LatLng(e[0],e[1]),scrollwheel:this.scrollWheel,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT},zoom:this.zoom,streetViewControl:this.streetViewControl}),this.locationFieldValue&&Object.keys(this.locationFieldValue).length>0&&(this.updateLocationInput(this.locationFieldValue.lat,this.locationFieldValue.lng),this.fitBoundMarker())),this.mapElement.dataset.googleMapObj=this.map,this.mapElement.dataset.googleMapWidgetObj=this}addMarkerToMap(e,t){this.removeMarker();var a={lat:parseFloat(e),lng:parseFloat(t)};this.marker=new google.maps.Marker({position:a,map:this.map,draggable:!0}),this.marker.addListener("dragend",this.dragMarker.bind(this))}fitBoundMarker(){var e=new google.maps.LatLngBounds;if(e.extend(this.marker.getPosition()),this.map.fitBounds(e),this.markerFitZoom&&this.isInt(this.markerFitZoom))var t=parseInt(this.markerFitZoom),a=google.maps.event.addListener(this.map,"idle",(function(){this.getZoom()>t&&this.setZoom(t),google.maps.event.removeListener(a)}))}removeMarker(){this.marker&&this.marker.setMap(null)}dragMarker(e){this.updateLocationInput(e.latLng.lat(),e.latLng.lng())}handleAddMarkerBtnClick(){this.mapElement.classList.toggle("click"),this.addMarkerBtn.classList.toggle("active"),this.addMarkerBtn.classList.contains("active")?this.map.addListener("click",this.handleMapClick.bind(this)):google.maps.event.clearListeners(this.map,"click")}handleMapClick(e){google.maps.event.clearListeners(this.map,"click"),this.mapElement.classList.remove("click"),this.addMarkerBtn.classList.remove("active"),this.updateLocationInput(e.latLng.lat(),e.latLng.lng())}}window.DjangoGooglePointFieldWidget=DjangoGooglePointFieldWidget;